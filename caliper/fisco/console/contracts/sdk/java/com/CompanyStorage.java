package com;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import org.fisco.bcos.sdk.abi.FunctionReturnDecoder;
import org.fisco.bcos.sdk.abi.TypeReference;
import org.fisco.bcos.sdk.abi.datatypes.Bool;
import org.fisco.bcos.sdk.abi.datatypes.DynamicArray;
import org.fisco.bcos.sdk.abi.datatypes.Event;
import org.fisco.bcos.sdk.abi.datatypes.Function;
import org.fisco.bcos.sdk.abi.datatypes.Type;
import org.fisco.bcos.sdk.abi.datatypes.Utf8String;
import org.fisco.bcos.sdk.abi.datatypes.generated.Int8;
import org.fisco.bcos.sdk.abi.datatypes.generated.Uint256;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple1;
import org.fisco.bcos.sdk.abi.datatypes.generated.tuples.generated.Tuple4;
import org.fisco.bcos.sdk.client.Client;
import org.fisco.bcos.sdk.contract.Contract;
import org.fisco.bcos.sdk.crypto.CryptoSuite;
import org.fisco.bcos.sdk.crypto.keypair.CryptoKeyPair;
import org.fisco.bcos.sdk.eventsub.EventCallback;
import org.fisco.bcos.sdk.model.CryptoType;
import org.fisco.bcos.sdk.model.TransactionReceipt;
import org.fisco.bcos.sdk.model.callback.TransactionCallback;
import org.fisco.bcos.sdk.transaction.model.exception.ContractException;

@SuppressWarnings("unchecked")
public class CompanyStorage extends Contract {
    public static final String[] BINARY_ARRAY = {"60806040523480156200001157600080fd5b50620000f660006040805190810160405280600a81526020017f74625f636f6d70616e79000000000000000000000000000000000000000000008152506040805190810160405280600e81526020017f636f6d70616e7941646472657373000000000000000000000000000000000000815250606060405190810160405280602d81526020017f636f6d70616e794e616d652c6c6f636174696f6e2c62757373696e657373536381526020017f6f70652c7472616e734c69737400000000000000000000000000000000000000815250620001e0640100000000026401000000009004565b620001da60036040805190810160405280600b81526020017f74625f70657263686173650000000000000000000000000000000000000000008152506040805190810160405280600e81526020017f636f6d70616e7941646472657373000000000000000000000000000000000000815250606060405190810160405280602281526020017f636f6d70616e794e616d652c70657263686173654c6973742c7472616e734c6981526020017f7374000000000000000000000000000000000000000000000000000000000000815250620001e0640100000000026401000000009004565b62000b3e565b6000620001ec620007de565b620001f6620007de565b60008061100194508473ffffffffffffffffffffffffffffffffffffffff166356004b6a8989896040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401620002599392919062000a90565b602060405180830381600087803b1580156200027457600080fd5b505af115801562000289573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250620002af919081019062000a28565b5087896000019080519060200190620002ca929190620007f8565b5086896001019080519060200190620002e5929190620007f8565b5060006040519080825280602002602001820160405280156200031d57816020015b6060815260200190600190039081620003075790505b50896002019080519060200190620003379291906200087f565b506200035786620004816401000000000262002af9176401000000009004565b9350620003ad6040805190810160405280600181526020017f2c00000000000000000000000000000000000000000000000000000000000000815250620004816401000000000262002af9176401000000009004565b92506001620003d48486620004b16401000000000262002b27179091906401000000009004565b019150600090505b818110156200047657886002016200042a6200041085876200054c6401000000000262002b9e179091906401000000009004565b620005796401000000000262002bb8176401000000009004565b908060018154018082558091505090600182039060005260206000200160009091929091909150908051906020019062000466929190620007f8565b50508080600101915050620003dc565b505050505050505050565b6200048b620007de565b600060208301905060408051908101604052808451815260200182815250915050919050565b6000808260000151620004e68560000151866020015186600001518760200151620005ed640100000000026401000000009004565b0190505b8360000151846020015101811115156200054557818060010192505082600001516200053c856020015183038660000151038386600001518760200151620005ed640100000000026401000000009004565b019050620004ea565b5092915050565b62000556620007de565b62000572838383620006de640100000000026401000000009004565b5092915050565b606080600083600001516040519080825280601f01601f191660200182016040528015620005b65781602001602082028038833980820191505090505b509150602082019050620005e3818560200151866000015162000791640100000000026401000000009004565b8192505050919050565b60008060008060008060008060008b97508c8b111515620006c85760208b1115156200067e5760018b60200360080260020a03196001029550858a511694508a8d8d010393508588511692505b846000191683600019161415156200067557838810151562000661578c8c019850620006ce565b87806001019850508588511692506200063a565b879850620006ce565b8a8a209150600096505b8a8d0387111515620006c7578a88209050806000191682600019161415620006b357879850620006ce565b600188019750868060010197505062000688565b5b8c8c0198505b5050505050505050949350505050565b620006e8620007de565b6000620007178560000151866020015186600001518760200151620005ed640100000000026401000000009004565b905084602001518360200181815250508460200151810383600001818152505084600001518560200151018114156200075b57600085600001818152505062000786565b8360000151836000015101856000018181510391508181525050836000015181018560200181815250505b829150509392505050565b60005b602082101515620007bb578251845260208401935060208301925060208203915062000794565b6001826020036101000a0390508019835116818551168181178652505050505050565b604080519081016040528060008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200083b57805160ff19168380011785556200086c565b828001600101855582156200086c579182015b828111156200086b5782518255916020019190600101906200084e565b5b5090506200087b9190620008e6565b5090565b828054828255906000526020600020908101928215620008d3579160200282015b82811115620008d2578251829080519060200190620008c19291906200090e565b5091602001919060010190620008a0565b5b509050620008e2919062000995565b5090565b6200090b91905b8082111562000907576000816000905550600101620008ed565b5090565b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200095157805160ff191683800117855562000982565b8280016001018555821562000982579182015b828111156200098157825182559160200191906001019062000964565b5b509050620009919190620008e6565b5090565b620009c391905b80821115620009bf5760008181620009b59190620009c6565b506001016200099c565b5090565b90565b50805460018160011615610100020316600290046000825580601f10620009ee575062000a0f565b601f01602090049060005260206000209081019062000a0e9190620008e6565b5b50565b600062000a20825162000aed565b905092915050565b60006020828403121562000a3b57600080fd5b600062000a4b8482850162000a12565b91505092915050565b600062000a618262000ae2565b80845262000a7781602086016020860162000af7565b62000a828162000b2d565b602085010191505092915050565b6000606082019050818103600083015262000aac818662000a54565b9050818103602083015262000ac2818562000a54565b9050818103604083015262000ad8818462000a54565b9050949350505050565b600081519050919050565b6000819050919050565b60005b8381101562000b1757808201518184015260208101905062000afa565b8381111562000b27576000848401525b50505050565b6000601f19601f8301169050919050565b613f468062000b4e6000396000f3006080604052600436106100a3576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168062677a8c146100a8578063859065f0146100e55780639745bb3614610122578063ad8355b51461015f578063b0c4d5371461019c578063b81f4ac6146101d9578063cc89492614610202578063def869ba1461022b578063e643745214610254578063ff69c2b114610291575b600080fd5b3480156100b457600080fd5b506100cf60048036036100ca919081019061372b565b6102ba565b6040516100dc9190613b45565b60405180910390f35b3480156100f157600080fd5b5061010c6004803603610107919081019061372b565b61035d565b6040516101199190613a80565b60405180910390f35b34801561012e57600080fd5b506101496004803603610144919081019061372b565b61044a565b6040516101569190613b45565b60405180910390f35b34801561016b57600080fd5b506101866004803603610181919081019061372b565b6104ed565b6040516101939190613aa2565b60405180910390f35b3480156101a857600080fd5b506101c360048036036101be919081019061372b565b610540565b6040516101d09190613a80565b60405180910390f35b3480156101e557600080fd5b5061020060048036036101fb919081019061372b565b61062d565b005b34801561020e57600080fd5b506102296004803603610224919081019061372b565b610853565b005b34801561023757600080fd5b50610252600480360361024d91908101906137ad565b610ba3565b005b34801561026057600080fd5b5061027b6004803603610276919081019061372b565b610c98565b6040516102889190613aa2565b60405180910390f35b34801561029d57600080fd5b506102b860048036036102b391908101906137ad565b610ceb565b005b6060600060606102cb600085610de0565b91509150600160000b8260000b146040805190810160405280600d81526020017f7175657279206661696c65642100000000000000000000000000000000000000815250901515610352576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103499190613b23565b60405180910390fd5b508092505050919050565b6060600060606103b860038560408051908101604052806040805190810160405280600e81526020017f636f6d70616e79416464726573730000000000000000000000000000000000008152508152602001888152506110d5565b91509150600160000b8260000b146040805190810160405280600d81526020017f7175657279206661696c6564210000000000000000000000000000000000000081525090151561043f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104369190613b23565b60405180910390fd5b508092505050919050565b60606000606061045b600385610de0565b91509150600160000b8260000b146040805190810160405280600d81526020017f7175657279206661696c656421000000000000000000000000000000000000008152509015156104e2576040517f08c379a0000000","","0203166002900480156115055780601f106114da57610100808354040283529160200191611505565b820191906000526020600020905b8154815290600101906020018083116114e857829003601f168201915b50505050508152602001906001019061145d565b505050508473ffffffffffffffffffffffffffffffffffffffff1663846719e060006040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016115739190613b08565b602060405180830381600087803b15801561158d57600080fd5b505af11580156115a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115c591908101906136b0565b6129b8565b905061162d565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe9150600060405190808252806020026020018201604052801561162957816020015b60608152602001906001900390816116145790505b5090505b8181965096505050505050935093915050565b60008060008061164f8561233c565b92508273ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156116b557600080fd5b505af11580156116c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506116ed919081019061365e565b91508273ffffffffffffffffffffffffffffffffffffffff1663e8434e3987846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611746929190613b67565b602060405180830381600087803b15801561176057600080fd5b505af1158015611774573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506117989190810190613687565b905060008173ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561180057600080fd5b505af1158015611814573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118389190810190613702565b1415611869577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60000b9350611871565b600160000b93505b50505092915050565b606080611885613454565b61188d613454565b60008061189987612af9565b93506118d96040805190810160405280600181526020017f2c00000000000000000000000000000000000000000000000000000000000000815250612af9565b925060016118f08486612b2790919063ffffffff16565b0191508160405190808252806020026020018201604052801561192757816020015b60608152602001906001900390816119125790505b509450600090505b8181101561197a5761195261194d8486612b9e90919063ffffffff16565b612bb8565b858281518110151561196057fe5b90602001906020020181905250808060010191505061192f565b8495505050505050919050565b6000806000606080600080600080965060009550611a408c6000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a365780601f10611a0b57610100808354040283529160200191611a36565b820191906000526020600020905b815481529060010190602001808311611a1957829003601f168201915b505050505061233c565b92508815611a70577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe9550611a83565b611a7a8c8c610de0565b80965081975050505b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60000b8660000b1415611dc757611aba8a61187a565b93508273ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611b2057600080fd5b505af1158015611b34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611b5891908101906136b0565b91508173ffffffffffffffffffffffffffffffffffffffff1663e942b5168d6001018d6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611bb4929190613c73565b600060405180830381600087803b158015611bce57600080fd5b505af1158015611be2573d6000803e3d6000fd5b50505050600090505b8b60020180549050811015611cc1578173ffffffffffffffffffffffffffffffffffffffff1663e942b5168d60020183815481101515611c2757fe5b906000526020600020018684815181101515611c3f57fe5b906020019060200201516040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611c82929190613c3c565b600060405180830381600087803b158015611c9c57600080fd5b505af1158015611cb0573d6000803e3d6000fd5b505050508080600101915050611beb565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc965060018373ffffffffffffffffffffffffffffffffffffffff166331afac368d856040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611d3d929190613b97565b602060405180830381600087803b158015611d5757600080fd5b505af1158015611d6b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611d8f9190810190613702565b1415611d9e5760019650611dc2565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff96505b611deb565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd96505b86975050505050505050949350505050565b606080849050828185815181101515611e1257fe5b90602001906020020181905250611e2881612c1a565b9150509392505050565b6000806060600080600080611ee28b6000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ed85780601f10611ead57610100808354040283529160200191611ed8565b820191906000526020600020905b815481529060010190602001808311611ebb57829003601f168201915b505050505061233c565b9550611eed8961187a565b94508573ffffffffffffffffffffffffffffffffffffffff166313db93466040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611f5357600080fd5b505af1158015611f67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611f8b91908101906136b0565b93508573ffffffffffffffffffffffffffffffffffffffff16637857d7c96040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611ff157600080fd5b505af1158015612005573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250612029919081019061365e565b925060028014156120e4578273ffffffffffffffffffffffffffffffffffffffff1663cd30a1d189600060028110151561205f57fe5b60200201518a600160028110151561207357fe5b60200201516040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016120b1929190613c05565b600060405180830381600087803b1580156120cb57600080fd5b505af11580156120df573d6000803e3d6000fd5b505050505b8373ffffffffffffffffffffffffffffffffffffffff1663e942b5168c6001018c6040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161213e929190613c73565b600060405180830381600087803b15801561215857600080fd5b505af115801561216c573d6000803e3d6000fd5b50505050600091505b8a6002018054905082101561224b578373ffffffffffffffffffffffffffffffffffffffff1663e942b5168c600201848154811015156121b157fe5b9060005260206000200187858151811015156121c957fe5b906020019060200201516040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161220c929190613c3c565b600060405180830381600087803b15801561222657600080fd5b505af115801561223a573d6000803e3d6000fd5b505050508180600101925050612175565b8573ffffffffffffffffffffffffffffffffffffffff1663bf2b70a18b86866040518463ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016122a493929190613bc7565b602060405180830381600087803b1580156122be57600080fd5b505af11580156122d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506122f69190810190613702565b9050600181141561230a576001965061232e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff96505b505050505050949350505050565b60008061100190508073ffffffffffffffffffffffffffffffffffffffff1663f23f63c9846040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016123999190613b45565b602060405180830381600087803b1580156123b357600080fd5b505af11580156123c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506123eb91908101906136d9565b915050919050565b60006060806000606060008673ffffffffffffffffffffffffffffffffffffffff1663949d225d6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561246257600080fd5b505af1158015612476573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061249a9190810190613702565b600014156124cd577fffffffffffffffffffffffffffff","","57813586016134c08882613548565b8452602084019350602083019250506001810190506134aa565b5050505092915050565b60006134f08251613e27565b905092915050565b60006135048251613e39565b905092915050565b60006135188251613e4b565b905092915050565b600061352c8251613e5d565b905092915050565b60006135408251613e6f565b905092915050565b600082601f830112151561355b57600080fd5b813561356e61356982613d3f565b613cea565b9150808252602083016020830185838301111561358a57600080fd5b613595838284613eb9565b50505092915050565b600082601f83011215156135b157600080fd5b81356135c46135bf82613d6b565b613cea565b915080825260208301602083018583830111156135e057600080fd5b6135eb838284613eb9565b50505092915050565b600082601f830112151561360757600080fd5b815161361a61361582613d6b565b613cea565b9150808252602083016020830185838301111561363657600080fd5b613641838284613ec8565b50505092915050565b60006136568235613e79565b905092915050565b60006020828403121561367057600080fd5b600061367e848285016134e4565b91505092915050565b60006020828403121561369957600080fd5b60006136a7848285016134f8565b91505092915050565b6000602082840312156136c257600080fd5b60006136d08482850161350c565b91505092915050565b6000602082840312156136eb57600080fd5b60006136f984828501613520565b91505092915050565b60006020828403121561371457600080fd5b600061372284828501613534565b91505092915050565b60006020828403121561373d57600080fd5b600082013567ffffffffffffffff81111561375757600080fd5b6137638482850161359e565b91505092915050565b60006020828403121561377e57600080fd5b600082015167ffffffffffffffff81111561379857600080fd5b6137a4848285016135f4565b91505092915050565b600080600080608085870312156137c357600080fd5b600085013567ffffffffffffffff8111156137dd57600080fd5b6137e98782880161359e565b945050602085013567ffffffffffffffff81111561380657600080fd5b6138128782880161346e565b93505060406138238782880161364a565b925050606085013567ffffffffffffffff81111561384057600080fd5b61384c8782880161359e565b91505092959194509250565b600061386382613db6565b8084526020840193508360208202850161387c85613d97565b60005b848110156138b5578383038852613897838351613956565b92506138a282613dd7565b915060208801975060018101905061387f565b508196508694505050505092915050565b6138cf81613e04565b82525050565b6138de81613e83565b82525050565b6138ed81613e95565b82525050565b6138fc81613e10565b82525050565b61390b81613e1a565b82525050565b61391a81613ea7565b82525050565b600061392b82613dcc565b80845261393f816020860160208601613ec8565b61394881613efb565b602085010191505092915050565b600061396182613dc1565b808452613975816020860160208601613ec8565b61397e81613efb565b602085010191505092915050565b6000815460018116600081146139a957600181146139c957613a0a565b607f600283041680865260ff198316602087015260408601935050613a0a565b600282048086526020860195506139df85613da4565b60005b82811015613a01578154818901526001820191506020810190506139e2565b80880195505050505b505092915050565b6000601e82527fe69bb4e696b0e98787e8b4ade585ace58fb8e4bfa1e681afe5a4b1e8b4a500006020830152604082019050919050565b6000601e82527fe69bb4e696b0e8bf90e8be93e585ace58fb8e4bfa1e681afe5a4b1e8b4a500006020830152604082019050919050565b60006020820190508181036000830152613a9a8184613858565b905092915050565b6000602082019050613ab760008301846138c6565b92915050565b6000602082019050613ad260008301846138f3565b92915050565b6000604082019050613aed6000830185613902565b8181036020830152613aff8184613920565b90509392505050565b6000602082019050613b1d6000830184613911565b92915050565b60006020820190508181036000830152613b3d8184613956565b905092915050565b60006020820190508181036000830152613b5f8184613920565b905092915050565b60006040820190508181036000830152613b818185613920565b9050613b9060208301846138d5565b9392505050565b60006040820190508181036000830152613bb18185613920565b9050613bc060208301846138e4565b9392505050565b60006060820190508181036000830152613be18186613920565b9050613bf060208301856138e4565b613bfd60408301846138d5565b949350505050565b60006040820190508181036000830152613c1f8185613956565b90508181036020830152613c338184613956565b90509392505050565b60006040820190508181036000830152613c56818561398c565b90508181036020830152613c6a8184613956565b90509392505050565b60006040820190508181036000830152613c8d818561398c565b90508181036020830152613ca18184613920565b90509392505050565b60006020820190508181036000830152613cc381613a12565b9050919050565b60006020820190508181036000830152613ce381613a49565b9050919050565b6000604051905081810181811067ffffffffffffffff82111715613d0d57600080fd5b8060405250919050565b600067ffffffffffffffff821115613d2e57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115613d5657600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115613d8257600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b60008160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b60008160000b9050919050565b6000613e3282613de4565b9050919050565b6000613e4482613de4565b9050919050565b6000613e5682613de4565b9050919050565b6000613e6882613de4565b9050919050565b6000819050919050565b6000819050919050565b6000613e8e82613de4565b9050919050565b6000613ea082613de4565b9050919050565b6000613eb282613e10565b9050919050565b82818337600083830152505050565b60005b83811015613ee6578082015181840152602081019050613ecb565b83811115613ef5576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a7230582033d0ad167c4f2d21debb9fb90193a60788448efeba8550084e27fc65571b24286c6578706572696d656e74616cf50037"};

    public static final String BINARY = org.fisco.bcos.sdk.utils.StringUtils.joinAll("", BINARY_ARRAY);

    public static final String[] SM_BINARY_ARRAY = {"","","0000000281526004016114c5929190613b68565b602060405180830381600087803b1580156114df57600080fd5b505af11580156114f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506115179190810190613688565b905061160787600201805480602002602001604051908101604052809291908181526020016000905b828210156115fc578382906000526020600020018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115e85780601f106115bd576101008083540402835291602001916115e8565b820191906000526020600020905b8154815290600101906020018083116115cb57829003601f168201915b505050505081526020019060010190611540565b505050508783612690565b945094505050509250929050565b6000606060008060008060606116c68a6000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156116bc5780601f10611691576101008083540402835291602001916116bc565b820191906000526020600020905b81548152906001019060200180831161169f57829003601f168201915b50505050506125d9565b94508473ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561172c57600080fd5b505af1158015611740573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611764919081019061365f565b9350600280141561181f578373ffffffffffffffffffffffffffffffffffffffff1663ae763db589600060028110151561179a57fe5b60200201518a60016002811015156117ae57fe5b60200201516040518363ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004016117ec929190613c06565b600060405180830381600087803b15801561180657600080fd5b505af115801561181a573d6000803e3d6000fd5b505050505b8473ffffffffffffffffffffffffffffffffffffffff1663d8ac59578a866040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611876929190613b68565b602060405180830381600087803b15801561189057600080fd5b505af11580156118a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506118c89190810190613688565b92506000915060008373ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561193457600080fd5b505af1158015611948573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061196c9190810190613703565b1315611b115760019150611b0a8a600201805480602002602001604051908101604052809291908181526020016000905b82821015611a59578382906000526020600020018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a455780601f10611a1a57610100808354040283529160200191611a45565b820191906000526020600020905b815481529060010190602001808311611a2857829003601f168201915b50505050508152602001906001019061199d565b505050508473ffffffffffffffffffffffffffffffffffffffff16633dd2b61460006040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611ab39190613b09565b602060405180830381600087803b158015611acd57600080fd5b505af1158015611ae1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611b0591908101906136b1565b612c55565b9050611b6d565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe91506000604051908082528060200260200182016040528015611b6957816020015b6060815260200190600190039081611b545790505b5090505b8181965096505050505050935093915050565b606080611b8b613455565b611b93613455565b600080611b9f87612d96565b9350611bdf6040805190810160405280600181526020017f2c00000000000000000000000000000000000000000000000000000000000000815250612d96565b92506001611bf68486612dc490919063ffffffff16565b01915081604051908082528060200260200182016040528015611c2d57816020015b6060815260200190600190039081611c185790505b509450600090505b81811015611c8057611c58611c538486612e3b90919063ffffffff16565b612e55565b8582815181101515611c6657fe5b906020019060200201819052508080600101915050611c35565b8495505050505050919050565b6000806000606080600080600080965060009550611d468c6000018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611d3c5780601f10611d1157610100808354040283529160200191611d3c565b820191906000526020600020905b815481529060010190602001808311611d1f57829003601f168201915b50505050506125d9565b92508815611d76577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe9550611d89565b611d808c8c611320565b80965081975050505b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe60000b8660000b14156120cd57611dc08a611b80565b93508273ffffffffffffffffffffffffffffffffffffffff16635887ab246040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015611e2657600080fd5b505af1158015611e3a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250611e5e91908101906136b1565b91508173ffffffffffffffffffffffffffffffffffffffff16631a391cb48d6001018d6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611eba929190613c74565b600060405180830381600087803b158015611ed457600080fd5b505af1158015611ee8573d6000803e3d6000fd5b50505050600090505b8b60020180549050811015611fc7578173ffffffffffffffffffffffffffffffffffffffff16631a391cb48d60020183815481101515611f2d57fe5b906000526020600020018684815181101515611f4557fe5b906020019060200201516040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401611f88929190613c3d565b600060405180830381600087803b158015611fa257600080fd5b505af1158015611fb6573d6000803e3d6000fd5b505050508080600101915050611ef1565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc965060018373ffffffffffffffffffffffffffffffffffffffff16634c6f30c08d856040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612043929190613b98565b602060405180830381600087803b15801561205d57600080fd5b505af1158015612071573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506120959190810190613703565b14156120a457600196506120c8565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff96505b6120f1565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffd96505b86975050505050505050949350505050565b600080600080612112856125d9565b92508273ffffffffffffffffffffffffffffffffffffffff1663c74f8caf6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561217857600080fd5b505af115801561218c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506121b0919081019061365f565b91508273ffffffffffffffffffffffffffffffffffffffff1663d8ac595787846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401612209929190613b68565b602060405180830381600087803b15801561222357600080fd5b505af1158015612237573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061225b9190810190613688565b905060008173ffffffffffffffffffffffffffffffffffffffff1663d3e9af5a6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156122c357600080fd5b505af11580156122d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506122fb9190810190613703565b141561232c577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60000b9350612334565b600160000b93505b50505092915050565b60606000606080600060608060006060600080600099506040805190810160405280600181526020017f2c000000000000000000000000000000000000000000000000000000000000008152509850889750600096505b8b518710156123d75760008711156123ad5787518a0199505b8b878151811015156123bb57fe5b90602001906020020151518a0199508680600101975050612394565b896040519080825280601f01601f19166020018201604052801561240a5781602001602082028038833980820191505090505b50955085945060009350600096505b8b518710156125c7578b8781518110151561243057fe5b906020019060200201519250600087111561250057600091505b87518210156124ff57878281518110151561246157fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000028585815181","","db57813586016134c18882613549565b8452602084019350602083019250506001810190506134ab565b5050505092915050565b60006134f18251613e28565b905092915050565b60006135058251613e3a565b905092915050565b60006135198251613e4c565b905092915050565b600061352d8251613e5e565b905092915050565b60006135418251613e70565b905092915050565b600082601f830112151561355c57600080fd5b813561356f61356a82613d40565b613ceb565b9150808252602083016020830185838301111561358b57600080fd5b613596838284613eba565b50505092915050565b600082601f83011215156135b257600080fd5b81356135c56135c082613d6c565b613ceb565b915080825260208301602083018583830111156135e157600080fd5b6135ec838284613eba565b50505092915050565b600082601f830112151561360857600080fd5b815161361b61361682613d6c565b613ceb565b9150808252602083016020830185838301111561363757600080fd5b613642838284613ec9565b50505092915050565b60006136578235613e7a565b905092915050565b60006020828403121561367157600080fd5b600061367f848285016134e5565b91505092915050565b60006020828403121561369a57600080fd5b60006136a8848285016134f9565b91505092915050565b6000602082840312156136c357600080fd5b60006136d18482850161350d565b91505092915050565b6000602082840312156136ec57600080fd5b60006136fa84828501613521565b91505092915050565b60006020828403121561371557600080fd5b600061372384828501613535565b91505092915050565b60006020828403121561373e57600080fd5b600082013567ffffffffffffffff81111561375857600080fd5b6137648482850161359f565b91505092915050565b60006020828403121561377f57600080fd5b600082015167ffffffffffffffff81111561379957600080fd5b6137a5848285016135f5565b91505092915050565b600080600080608085870312156137c457600080fd5b600085013567ffffffffffffffff8111156137de57600080fd5b6137ea8782880161359f565b945050602085013567ffffffffffffffff81111561380757600080fd5b6138138782880161346f565b93505060406138248782880161364b565b925050606085013567ffffffffffffffff81111561384157600080fd5b61384d8782880161359f565b91505092959194509250565b600061386482613db7565b8084526020840193508360208202850161387d85613d98565b60005b848110156138b6578383038852613898838351613957565b92506138a382613dd8565b9150602088019750600181019050613880565b508196508694505050505092915050565b6138d081613e05565b82525050565b6138df81613e84565b82525050565b6138ee81613e96565b82525050565b6138fd81613e11565b82525050565b61390c81613e1b565b82525050565b61391b81613ea8565b82525050565b600061392c82613dcd565b808452613940816020860160208601613ec9565b61394981613efc565b602085010191505092915050565b600061396282613dc2565b808452613976816020860160208601613ec9565b61397f81613efc565b602085010191505092915050565b6000815460018116600081146139aa57600181146139ca57613a0b565b607f600283041680865260ff198316602087015260408601935050613a0b565b600282048086526020860195506139e085613da5565b60005b82811015613a02578154818901526001820191506020810190506139e3565b80880195505050505b505092915050565b6000601e82527fe69bb4e696b0e98787e8b4ade585ace58fb8e4bfa1e681afe5a4b1e8b4a500006020830152604082019050919050565b6000601e82527fe69bb4e696b0e8bf90e8be93e585ace58fb8e4bfa1e681afe5a4b1e8b4a500006020830152604082019050919050565b60006020820190508181036000830152613a9b8184613859565b905092915050565b6000602082019050613ab860008301846138c7565b92915050565b6000602082019050613ad360008301846138f4565b92915050565b6000604082019050613aee6000830185613903565b8181036020830152613b008184613921565b90509392505050565b6000602082019050613b1e6000830184613912565b92915050565b60006020820190508181036000830152613b3e8184613957565b905092915050565b60006020820190508181036000830152613b608184613921565b905092915050565b60006040820190508181036000830152613b828185613921565b9050613b9160208301846138d6565b9392505050565b60006040820190508181036000830152613bb28185613921565b9050613bc160208301846138e5565b9392505050565b60006060820190508181036000830152613be28186613921565b9050613bf160208301856138e5565b613bfe60408301846138d6565b949350505050565b60006040820190508181036000830152613c208185613957565b90508181036020830152613c348184613957565b90509392505050565b60006040820190508181036000830152613c57818561398d565b90508181036020830152613c6b8184613957565b90509392505050565b60006040820190508181036000830152613c8e818561398d565b90508181036020830152613ca28184613921565b90509392505050565b60006020820190508181036000830152613cc481613a13565b9050919050565b60006020820190508181036000830152613ce481613a4a565b9050919050565b6000604051905081810181811067ffffffffffffffff82111715613d0e57600080fd5b8060405250919050565b600067ffffffffffffffff821115613d2f57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115613d5757600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115613d8357600080fd5b601f19601f8301169050602081019050919050565b6000602082019050919050565b60008160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60008115159050919050565b6000819050919050565b60008160000b9050919050565b6000613e3382613de5565b9050919050565b6000613e4582613de5565b9050919050565b6000613e5782613de5565b9050919050565b6000613e6982613de5565b9050919050565b6000819050919050565b6000819050919050565b6000613e8f82613de5565b9050919050565b6000613ea182613de5565b9050919050565b6000613eb382613e11565b9050919050565b82818337600083830152505050565b60005b83811015613ee7578082015181840152602081019050613ecc565b83811115613ef6576000848401525b50505050565b6000601f19601f83011690509190505600a265627a7a72305820b73c9e1f32acda14c4bc00b1e9c1e079a0d8455cfe9aa54e07e8063c8a7248276c6578706572696d656e74616cf50037"};

    public static final String SM_BINARY = org.fisco.bcos.sdk.utils.StringUtils.joinAll("", SM_BINARY_ARRAY);

    public static final String[] ABI_ARRAY = {"[{\"constant\":true,\"inputs\":[{\"name\":\"company_addr\",\"type\":\"string\"}],\"name\":\"getTransCompany\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"company_addr\",\"type\":\"string\"}],\"name\":\"getPerChaseCompanyByArray\",\"outputs\":[{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"company_addr\",\"type\":\"string\"}],\"name\":\"getPerChaseCompany\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"company_addr\",\"type\":\"string\"}],\"name\":\"hasExistPerChaseCompany\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"company_addr\",\"type\":\"string\"}],\"name\":\"getTransCompanyToArray\",\"outputs\":[{\"name\":\"\",\"type\":\"string[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fields\",\"type\":\"string\"}],\"name\":\"createPerChaseCompany\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fields\",\"type\":\"string\"}],\"name\":\"createTransCompany\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"primaryKey\",\"type\":\"string\"},{\"name\":\"_fields\",\"type\":\"string[]\"},{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"new_val\",\"type\":\"string\"}],\"name\":\"updateTransCompany\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"company_addr\",\"type\":\"string\"}],\"name\":\"hasExistTransCompany\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"primaryKey\",\"type\":\"string\"},{\"name\":\"_fields\",\"type\":\"string[]\"},{\"name\":\"index\",\"type\":\"uint256\"},{\"name\":\"new_val\",\"type\":\"string\"}],\"name\":\"updatePerChaseCompany\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"int8\"},{\"indexed\":false,\"name\":\"\",\"type\":\"string\"}],\"name\":\"INSERT_EVENT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"int8\"},{\"indexed\":false,\"name\":\"\",\"type\":\"string\"}],\"name\":\"UPDATE_EVENT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"int8\"}],\"name\":\"QUERY_EVENT\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"\",\"type\":\"int8\"}],\"name\":\"REMOVE_EVENT\",\"type\":\"event\"}]"};

    public static final String ABI = org.fisco.bcos.sdk.utils.StringUtils.joinAll("", ABI_ARRAY);

    public static final String FUNC_GETTRANSCOMPANY = "getTransCompany";

    public static final String FUNC_GETPERCHASECOMPANYBYARRAY = "getPerChaseCompanyByArray";

    public static final String FUNC_GETPERCHASECOMPANY = "getPerChaseCompany";

    public static final String FUNC_HASEXISTPERCHASECOMPANY = "hasExistPerChaseCompany";

    public static final String FUNC_GETTRANSCOMPANYTOARRAY = "getTransCompanyToArray";

    public static final String FUNC_CREATEPERCHASECOMPANY = "createPerChaseCompany";

    public static final String FUNC_CREATETRANSCOMPANY = "createTransCompany";

    public static final String FUNC_UPDATETRANSCOMPANY = "updateTransCompany";

    public static final String FUNC_HASEXISTTRANSCOMPANY = "hasExistTransCompany";

    public static final String FUNC_UPDATEPERCHASECOMPANY = "updatePerChaseCompany";

    public static final Event INSERT_EVENT_EVENT = new Event("INSERT_EVENT", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int8>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event UPDATE_EVENT_EVENT = new Event("UPDATE_EVENT", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int8>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event QUERY_EVENT_EVENT = new Event("QUERY_EVENT", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int8>() {}));
    ;

    public static final Event REMOVE_EVENT_EVENT = new Event("REMOVE_EVENT", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Int8>() {}));
    ;

    protected CompanyStorage(String contractAddress, Client client, CryptoKeyPair credential) {
        super(getBinary(client.getCryptoSuite()), contractAddress, client, credential);
    }

    public static String getBinary(CryptoSuite cryptoSuite) {
        return (cryptoSuite.getCryptoTypeConfig() == CryptoType.ECDSA_TYPE ? BINARY : SM_BINARY);
    }

    public String getTransCompany(String company_addr) throws ContractException {
        final Function function = new Function(FUNC_GETTRANSCOMPANY, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(company_addr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public List getPerChaseCompanyByArray(String company_addr) throws ContractException {
        final Function function = new Function(FUNC_GETPERCHASECOMPANYBYARRAY, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(company_addr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> result = (List<Type>) executeCallWithSingleValueReturn(function, List.class);
        return convertToNative(result);
    }

    public String getPerChaseCompany(String company_addr) throws ContractException {
        final Function function = new Function(FUNC_GETPERCHASECOMPANY, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(company_addr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeCallWithSingleValueReturn(function, String.class);
    }

    public TransactionReceipt hasExistPerChaseCompany(String company_addr) {
        final Function function = new Function(
                FUNC_HASEXISTPERCHASECOMPANY, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(company_addr)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] hasExistPerChaseCompany(String company_addr, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_HASEXISTPERCHASECOMPANY, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(company_addr)), 
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForHasExistPerChaseCompany(String company_addr) {
        final Function function = new Function(
                FUNC_HASEXISTPERCHASECOMPANY, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(company_addr)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getHasExistPerChaseCompanyInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_HASEXISTPERCHASECOMPANY, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple1<Boolean> getHasExistPerChaseCompanyOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_HASEXISTPERCHASECOMPANY, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public List getTransCompanyToArray(String company_addr) throws ContractException {
        final Function function = new Function(FUNC_GETTRANSCOMPANYTOARRAY, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(company_addr)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}));
        List<Type> result = (List<Type>) executeCallWithSingleValueReturn(function, List.class);
        return convertToNative(result);
    }

    public TransactionReceipt createPerChaseCompany(String _fields) {
        final Function function = new Function(
                FUNC_CREATEPERCHASECOMPANY, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_fields)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] createPerChaseCompany(String _fields, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_CREATEPERCHASECOMPANY, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_fields)), 
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForCreatePerChaseCompany(String _fields) {
        final Function function = new Function(
                FUNC_CREATEPERCHASECOMPANY, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_fields)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getCreatePerChaseCompanyInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_CREATEPERCHASECOMPANY, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public TransactionReceipt createTransCompany(String _fields) {
        final Function function = new Function(
                FUNC_CREATETRANSCOMPANY, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_fields)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] createTransCompany(String _fields, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_CREATETRANSCOMPANY, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_fields)), 
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForCreateTransCompany(String _fields) {
        final Function function = new Function(
                FUNC_CREATETRANSCOMPANY, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(_fields)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getCreateTransCompanyInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_CREATETRANSCOMPANY, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public TransactionReceipt updateTransCompany(String primaryKey, List<String> _fields, BigInteger index, String new_val) {
        final Function function = new Function(
                FUNC_UPDATETRANSCOMPANY, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(primaryKey), 
                new org.fisco.bcos.sdk.abi.datatypes.DynamicArray<org.fisco.bcos.sdk.abi.datatypes.Utf8String>(
                org.fisco.bcos.sdk.abi.Utils.typeMap(_fields, org.fisco.bcos.sdk.abi.datatypes.Utf8String.class)), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(index), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(new_val)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] updateTransCompany(String primaryKey, List<String> _fields, BigInteger index, String new_val, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UPDATETRANSCOMPANY, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(primaryKey), 
                new org.fisco.bcos.sdk.abi.datatypes.DynamicArray<org.fisco.bcos.sdk.abi.datatypes.Utf8String>(
                org.fisco.bcos.sdk.abi.Utils.typeMap(_fields, org.fisco.bcos.sdk.abi.datatypes.Utf8String.class)), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(index), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(new_val)), 
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUpdateTransCompany(String primaryKey, List<String> _fields, BigInteger index, String new_val) {
        final Function function = new Function(
                FUNC_UPDATETRANSCOMPANY, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(primaryKey), 
                new org.fisco.bcos.sdk.abi.datatypes.DynamicArray<org.fisco.bcos.sdk.abi.datatypes.Utf8String>(
                org.fisco.bcos.sdk.abi.Utils.typeMap(_fields, org.fisco.bcos.sdk.abi.datatypes.Utf8String.class)), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(index), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(new_val)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple4<String, List<String>, BigInteger, String> getUpdateTransCompanyInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UPDATETRANSCOMPANY, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple4<String, List<String>, BigInteger, String>(

                (String) results.get(0).getValue(), 
                convertToNative((List<Utf8String>) results.get(1).getValue()), 
                (BigInteger) results.get(2).getValue(), 
                (String) results.get(3).getValue()
                );
    }

    public TransactionReceipt hasExistTransCompany(String company_addr) {
        final Function function = new Function(
                FUNC_HASEXISTTRANSCOMPANY, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(company_addr)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] hasExistTransCompany(String company_addr, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_HASEXISTTRANSCOMPANY, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(company_addr)), 
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForHasExistTransCompany(String company_addr) {
        final Function function = new Function(
                FUNC_HASEXISTTRANSCOMPANY, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(company_addr)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple1<String> getHasExistTransCompanyInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_HASEXISTTRANSCOMPANY, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<String>(

                (String) results.get(0).getValue()
                );
    }

    public Tuple1<Boolean> getHasExistTransCompanyOutput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getOutput();
        final Function function = new Function(FUNC_HASEXISTTRANSCOMPANY, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple1<Boolean>(

                (Boolean) results.get(0).getValue()
                );
    }

    public TransactionReceipt updatePerChaseCompany(String primaryKey, List<String> _fields, BigInteger index, String new_val) {
        final Function function = new Function(
                FUNC_UPDATEPERCHASECOMPANY, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(primaryKey), 
                new org.fisco.bcos.sdk.abi.datatypes.DynamicArray<org.fisco.bcos.sdk.abi.datatypes.Utf8String>(
                org.fisco.bcos.sdk.abi.Utils.typeMap(_fields, org.fisco.bcos.sdk.abi.datatypes.Utf8String.class)), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(index), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(new_val)), 
                Collections.<TypeReference<?>>emptyList());
        return executeTransaction(function);
    }

    public byte[] updatePerChaseCompany(String primaryKey, List<String> _fields, BigInteger index, String new_val, TransactionCallback callback) {
        final Function function = new Function(
                FUNC_UPDATEPERCHASECOMPANY, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(primaryKey), 
                new org.fisco.bcos.sdk.abi.datatypes.DynamicArray<org.fisco.bcos.sdk.abi.datatypes.Utf8String>(
                org.fisco.bcos.sdk.abi.Utils.typeMap(_fields, org.fisco.bcos.sdk.abi.datatypes.Utf8String.class)), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(index), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(new_val)), 
                Collections.<TypeReference<?>>emptyList());
        return asyncExecuteTransaction(function, callback);
    }

    public String getSignedTransactionForUpdatePerChaseCompany(String primaryKey, List<String> _fields, BigInteger index, String new_val) {
        final Function function = new Function(
                FUNC_UPDATEPERCHASECOMPANY, 
                Arrays.<Type>asList(new org.fisco.bcos.sdk.abi.datatypes.Utf8String(primaryKey), 
                new org.fisco.bcos.sdk.abi.datatypes.DynamicArray<org.fisco.bcos.sdk.abi.datatypes.Utf8String>(
                org.fisco.bcos.sdk.abi.Utils.typeMap(_fields, org.fisco.bcos.sdk.abi.datatypes.Utf8String.class)), 
                new org.fisco.bcos.sdk.abi.datatypes.generated.Uint256(index), 
                new org.fisco.bcos.sdk.abi.datatypes.Utf8String(new_val)), 
                Collections.<TypeReference<?>>emptyList());
        return createSignedTransaction(function);
    }

    public Tuple4<String, List<String>, BigInteger, String> getUpdatePerChaseCompanyInput(TransactionReceipt transactionReceipt) {
        String data = transactionReceipt.getInput().substring(10);
        final Function function = new Function(FUNC_UPDATEPERCHASECOMPANY, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}, new TypeReference<DynamicArray<Utf8String>>() {}, new TypeReference<Uint256>() {}, new TypeReference<Utf8String>() {}));
        List<Type> results = FunctionReturnDecoder.decode(data, function.getOutputParameters());
        return new Tuple4<String, List<String>, BigInteger, String>(

                (String) results.get(0).getValue(), 
                convertToNative((List<Utf8String>) results.get(1).getValue()), 
                (BigInteger) results.get(2).getValue(), 
                (String) results.get(3).getValue()
                );
    }

    public List<INSERT_EVENTEventResponse> getINSERT_EVENTEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(INSERT_EVENT_EVENT, transactionReceipt);
        ArrayList<INSERT_EVENTEventResponse> responses = new ArrayList<INSERT_EVENTEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            INSERT_EVENTEventResponse typedResponse = new INSERT_EVENTEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.INSERT_EVENTParam0 = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.INSERT_EVENTParam1 = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeINSERT_EVENTEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERT_EVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeINSERT_EVENTEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(INSERT_EVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<UPDATE_EVENTEventResponse> getUPDATE_EVENTEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(UPDATE_EVENT_EVENT, transactionReceipt);
        ArrayList<UPDATE_EVENTEventResponse> responses = new ArrayList<UPDATE_EVENTEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            UPDATE_EVENTEventResponse typedResponse = new UPDATE_EVENTEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.UPDATE_EVENTParam0 = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.UPDATE_EVENTParam1 = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeUPDATE_EVENTEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATE_EVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeUPDATE_EVENTEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(UPDATE_EVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<QUERY_EVENTEventResponse> getQUERY_EVENTEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(QUERY_EVENT_EVENT, transactionReceipt);
        ArrayList<QUERY_EVENTEventResponse> responses = new ArrayList<QUERY_EVENTEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            QUERY_EVENTEventResponse typedResponse = new QUERY_EVENTEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.QUERY_EVENTParam0 = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeQUERY_EVENTEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(QUERY_EVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeQUERY_EVENTEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(QUERY_EVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public List<REMOVE_EVENTEventResponse> getREMOVE_EVENTEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(REMOVE_EVENT_EVENT, transactionReceipt);
        ArrayList<REMOVE_EVENTEventResponse> responses = new ArrayList<REMOVE_EVENTEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            REMOVE_EVENTEventResponse typedResponse = new REMOVE_EVENTEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.REMOVE_EVENTParam0 = (BigInteger) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public void subscribeREMOVE_EVENTEvent(String fromBlock, String toBlock, List<String> otherTopics, EventCallback callback) {
        String topic0 = eventEncoder.encode(REMOVE_EVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,fromBlock,toBlock,otherTopics,callback);
    }

    public void subscribeREMOVE_EVENTEvent(EventCallback callback) {
        String topic0 = eventEncoder.encode(REMOVE_EVENT_EVENT);
        subscribeEvent(ABI,BINARY,topic0,callback);
    }

    public static CompanyStorage load(String contractAddress, Client client, CryptoKeyPair credential) {
        return new CompanyStorage(contractAddress, client, credential);
    }

    public static CompanyStorage deploy(Client client, CryptoKeyPair credential) throws ContractException {
        return deploy(CompanyStorage.class, client, credential, getBinary(client.getCryptoSuite()), "");
    }

    public static class INSERT_EVENTEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger INSERT_EVENTParam0;

        public String INSERT_EVENTParam1;
    }

    public static class UPDATE_EVENTEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger UPDATE_EVENTParam0;

        public String UPDATE_EVENTParam1;
    }

    public static class QUERY_EVENTEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger QUERY_EVENTParam0;
    }

    public static class REMOVE_EVENTEventResponse {
        public TransactionReceipt.Logs log;

        public BigInteger REMOVE_EVENTParam0;
    }
}
